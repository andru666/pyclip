
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEXPleftSHIFTleftLEleftGEleftLTleftGTleftORleftANDrightUMINUSAND BAND DIVIDE DOTS EQUALS EXP FLOAT GE GT HEX HEXSTR HEXTOASCII HEXTODEC HEXTOSTR LE LPAREN LT MINUS NAME NEQ NUMBER OR PLUS QUEST RPAREN SHIFT STRCONST TIMESstatement : expression\n        expression : expression MINUS expression\n                   | expression TIMES expression\n                   | expression DIVIDE expression\n                   | expression EXP expression\n                   | expression BAND expression\n        expression : expression PLUS expressionexpression : MINUS expression %prec UMINUSexpression : expression EQUALS expressionexpression : expression NEQ expressionexpression : expression LE expressionexpression : expression LT expressionexpression : expression GE expressionexpression : expression GT expressionexpression : expression OR expressionexpression : expression AND expressionexpression : expression SHIFT expressionexpression : expression QUEST expression DOTS expressionexpression : STRCONSTexpression : HEXTODECexpression : HEXTOSTRexpression : HEXTOASCIIexpression : LPAREN expression RPARENexpression : NUMBERexpression : HEXexpression : HEXSTRexpression : FLOATexpression : NAME'
    
_lr_action_items = {'LPAREN':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SHIFT':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,21,-27,-20,21,-8,-23,-16,-15,-11,-13,21,-17,21,21,21,-12,-14,21,21,21,21,21,21,]),'NUMBER':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'EXP':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,29,-27,-20,29,-8,-23,-16,-15,-11,-13,29,-17,29,29,29,-12,-14,29,29,-5,29,29,29,]),'MINUS':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,],[3,3,-24,3,-21,-25,-19,-26,-22,-28,30,-27,-20,30,-8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-23,-16,-15,-11,-13,-4,-17,30,-3,30,-12,-14,-7,30,-5,-2,30,3,30,]),'NEQ':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,31,-27,-20,31,-8,-23,-16,-15,-11,-13,-4,-17,31,-3,31,-12,-14,-7,31,-5,-2,31,31,]),'HEXTOSTR':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LE':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,18,-27,-20,18,-8,-23,-16,-15,-11,-13,18,18,18,18,18,-12,-14,18,18,18,18,18,18,]),'RPAREN':([2,4,6,7,8,9,10,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,-27,-20,32,-8,-23,-16,-15,-11,-13,-4,-17,-9,-3,-6,-12,-14,-7,-5,-2,-10,-18,]),'LT':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,25,-27,-20,25,-8,-23,-16,-15,25,25,25,25,25,25,25,-12,-14,25,25,25,25,25,25,]),'QUEST':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,28,-27,-20,28,-8,-23,-16,-15,-11,-13,-4,-17,28,-3,28,-12,-14,-7,28,-5,-2,28,28,]),'PLUS':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,27,-27,-20,27,-8,-23,-16,-15,-11,-13,-4,-17,27,-3,27,-12,-14,-7,27,-5,-2,27,27,]),'$end':([2,4,5,6,7,8,9,10,11,12,13,15,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,50,],[-24,-21,0,-25,-19,-26,-22,-28,-1,-27,-20,-8,-23,-16,-15,-11,-13,-4,-17,-9,-3,-6,-12,-14,-7,-5,-2,-10,-18,]),'DOTS':([2,4,6,7,8,9,10,12,13,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,-27,-20,-8,-23,-16,-15,-11,-13,-4,-17,-9,-3,-6,-12,-14,-7,49,-5,-2,-10,-18,]),'GT':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,26,-27,-20,26,-8,-23,-16,-15,26,26,26,26,26,26,26,26,-14,26,26,26,26,26,26,]),'DIVIDE':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,20,-27,-20,20,-8,-23,-16,-15,-11,-13,-4,-17,20,-3,20,-12,-14,20,20,-5,20,20,20,]),'HEX':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQUALS':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,22,-27,-20,22,-8,-23,-16,-15,-11,-13,-4,-17,22,-3,22,-12,-14,-7,22,-5,-2,22,22,]),'TIMES':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,23,-27,-20,23,-8,-23,-16,-15,-11,-13,-4,-17,23,-3,23,-12,-14,23,23,-5,23,23,23,]),'BAND':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,24,-27,-20,24,-8,-23,-16,-15,-11,-13,-4,-17,24,-3,24,-12,-14,-7,24,-5,-2,24,24,]),'GE':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,19,-27,-20,19,-8,-23,-16,-15,19,-13,19,19,19,19,19,-12,-14,19,19,19,19,19,19,]),'STRCONST':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'HEXSTR':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'HEXTOASCII':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'AND':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,16,-27,-20,16,-8,-23,-16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'NAME':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'HEXTODEC':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'OR':([2,4,6,7,8,9,10,11,12,13,14,15,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,],[-24,-21,-25,-19,-26,-22,-28,17,-27,-20,17,-8,-23,-16,-15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,49,],[11,14,15,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,]),'statement':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','mod_ply.py',113),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mod_ply.py',119),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','mod_ply.py',120),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mod_ply.py',121),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','mod_ply.py',122),
  ('expression -> expression BAND expression','expression',3,'p_expression_binop','mod_ply.py',123),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','mod_ply.py',134),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','mod_ply.py',142),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_equals','mod_ply.py',147),
  ('expression -> expression NEQ expression','expression',3,'p_expression_notequals','mod_ply.py',155),
  ('expression -> expression LE expression','expression',3,'p_expression_le','mod_ply.py',163),
  ('expression -> expression LT expression','expression',3,'p_expression_lt','mod_ply.py',171),
  ('expression -> expression GE expression','expression',3,'p_expression_ge','mod_ply.py',179),
  ('expression -> expression GT expression','expression',3,'p_expression_gt','mod_ply.py',187),
  ('expression -> expression OR expression','expression',3,'p_expression_or','mod_ply.py',195),
  ('expression -> expression AND expression','expression',3,'p_expression_and','mod_ply.py',203),
  ('expression -> expression SHIFT expression','expression',3,'p_expression_shift','mod_ply.py',211),
  ('expression -> expression QUEST expression DOTS expression','expression',5,'p_expression_condition','mod_ply.py',216),
  ('expression -> STRCONST','expression',1,'p_expression_strconst','mod_ply.py',224),
  ('expression -> HEXTODEC','expression',1,'p_expression_HexaToDec','mod_ply.py',229),
  ('expression -> HEXTOSTR','expression',1,'p_expression_HexaToString','mod_ply.py',237),
  ('expression -> HEXTOASCII','expression',1,'p_expression_HexaToAscii','mod_ply.py',245),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mod_ply.py',256),
  ('expression -> NUMBER','expression',1,'p_expression_number','mod_ply.py',261),
  ('expression -> HEX','expression',1,'p_expression_hex','mod_ply.py',266),
  ('expression -> HEXSTR','expression',1,'p_expression_hexstr','mod_ply.py',271),
  ('expression -> FLOAT','expression',1,'p_expression_float','mod_ply.py',276),
  ('expression -> NAME','expression',1,'p_expression_name','mod_ply.py',281),
]
